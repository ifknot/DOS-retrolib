/**
 *
 *  @brief     
 *  @details   ~
 *  @author    Jeremy Thornton
 *  @date      14.04.2024
 *  @copyright © Jeremy Thornton, 2024. All right reserved.
 *
 */
#ifndef KBD_INTERUPT_ROUTINES_H
#define KBD_INTERUPT_ROUTINES_H

#include <stdint.h>

#include "../TEST/debug_macros.h"

#include "../DOS/dos_services.h"

#include "kbd_constants.h"

namespace kbd {

	/**
	* @brief If a scan code was generated by a keypress then the value is increased until 255 presses
	* @note the user must either decrease or reset the values(s)
	*/
	volatile uint8_t key_pressed[MAX_SCAN_CODES];

	/**
	* @brief The current moment state of the keypress 1 = pressed 0 = released
	*/
	volatile uint8_t key_states[MAX_SCAN_CODES];
	
	static mem::address_t old_kbd_isr;

	namespace xt {

		void interrupt far interrupt_handler();

		mem::address_t install_simple_isr_9();

	}

	void clear_key_pressed_array();

	void install_keyboard_interrupt_handler(void* new_kbd_isr_ptr);

	void restore_keyboard_interupt_handler();

}

#endif